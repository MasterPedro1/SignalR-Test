@page



<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Pedidos - Vendedores</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>
</head>
<body class="bg-gray-100 text-gray-900 flex justify-center items-center min-h-screen">

    <div class="max-w-4xl w-full">
        <!-- Sección de ingreso de nombre -->
        <div id="nombreSection" class="bg-white p-6 rounded-lg shadow-md text-center">
            <h2 class="text-2xl font-semibold mb-4">Ingresa tu nombre</h2>
            <div class="flex justify-center gap-2">
                <input type="text" id="nombreVendedor" placeholder="Tu nombre" class="border rounded px-4 py-2 w-64">
                <button onclick="guardarNombre()" class="bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600">
                    Aceptar
                </button>
            </div>
        </div>

        <!-- Sección de pedidos (oculta al inicio) -->
        <div id="pedidoSection" class="hidden mt-6">
            <div class="flex justify-between items-center mb-4">
                <h2 class="text-3xl font-bold">Registro de Pedidos</h2>
                <a href="Admin" class="bg-indigo-500 text-white px-4 py-2 rounded hover:bg-indigo-600">
                    Ir a Administración
                </a>
            </div>

            <div class="mb-4">
                <p class="text-lg font-semibold">Bienvenido, <span id="nombreUsuario" class="text-blue-600"></span></p>
            </div>

            <!-- Formulario para agregar pedido -->
            <div class="bg-white p-6 rounded-lg shadow-md mb-6">
                <h3 class="text-xl font-semibold mb-4">Agregar Pedido</h3>
                <div class="flex flex-wrap gap-4">
                    <input type="text" id="pedido" placeholder="Pedido" class="border rounded px-4 py-2 w-full sm:w-2/5">
                    <input type="number" id="cantidad" placeholder="Cantidad" class="border rounded px-4 py-2 w-24">
                    <button id="btnEnviarPedido" class="bg-green-500 text-white px-4 py-2 rounded hover:bg-green-600 disabled:opacity-50 disabled:cursor-not-allowed" disabled>
                        Enviar Pedido
                    </button>
                </div>
            </div>

            <!-- Tabla de pedidos -->
            <div class="bg-white p-6 rounded-lg shadow-md">
                <table class="w-full border-collapse text-center">
                    <thead>
                        <tr class="bg-gray-200">
                            <th class="p-3">Pedido</th>
                            <th class="p-3">Cantidad</th>
                            <th class="p-3">Fecha</th>
                            <th class="p-3">Usuario</th>
                            <th class="p-3">Estatus</th>
                            <th class="p-3">Acciones</th>
                        </tr>
                    </thead>
                    <tbody id="tablaPedidos" class="text-gray-700"></tbody>
                </table>
            </div>
        </div>
    </div>

    <script>
        let usuario = "";
        let connection = new signalR.HubConnectionBuilder()
            .withUrl("/pedidoHub")
            .withAutomaticReconnect() // Permitir reconexión automática si la conexión se pierde
            .build();

        // Iniciar conexión y habilitar botón de enviar cuando esté lista
        async function iniciarConexion() {
            try {
                await connection.start();
                console.log("Conectado a SignalR");
                document.getElementById("btnEnviarPedido").disabled = false;
                connection.invoke("ObtenerPedidos").catch(err => console.error(err.toString()));
            } catch (err) {
                console.error("Error al conectar con SignalR: ", err);
                setTimeout(iniciarConexion, 5000); // Reintentar conexión en 5 segundos
            }
        }

        connection.onclose(() => {
            console.warn("Conexión cerrada. Intentando reconectar...");
            iniciarConexion();
        });

        iniciarConexion(); // Ejecutar conexión al cargar la página

        function guardarNombre() {
            usuario = document.getElementById("nombreVendedor").value.trim();
            if (usuario === "") {
                alert("Por favor, ingresa tu nombre.");
                return;
            }

            document.getElementById("nombreSection").classList.add("hidden");
            document.getElementById("pedidoSection").classList.remove("hidden");
            document.getElementById("nombreUsuario").textContent = usuario;
        }

        document.getElementById("btnEnviarPedido").addEventListener("click", function () {
            agregarPedido();
        });

        function agregarPedido() {
            const pedido = document.getElementById("pedido").value.trim();
            const cantidad = document.getElementById("cantidad").value.trim();
            const fecha = new Date().toISOString().split('T')[0];

            if (!pedido || !cantidad || !usuario) {
                alert("Todos los campos son obligatorios");
                return;
            }

            const nuevoPedido = {
                id: crypto.randomUUID(),
                pedido: pedido,
                cantidad: cantidad,
                fecha: fecha,
                usuario: usuario,
                estatus: "En revisión"
            };

            if (connection.state === "Connected") {
                connection.invoke("EnviarPedido", nuevoPedido).catch(err => console.error(err.toString()));
            } else {
                console.warn("No se puede enviar el pedido porque la conexión no está lista.");
            }
        }

        connection.on("ActualizarPedidos", (pedidos) => {
            const tabla = document.getElementById("tablaPedidos");
            tabla.innerHTML = "";

            pedidos.slice().reverse().forEach(pedido => {
                const fila = document.createElement("tr");
                fila.classList.add("border-b");
                fila.innerHTML = `
                            <td class="p-3">${pedido.pedido}</td>
                            <td class="p-3">${pedido.cantidad}</td>
                            <td class="p-3">${pedido.fecha}</td>
                            <td class="p-3">${pedido.usuario}</td>
                            <td class="p-3 text-yellow-500">${pedido.estatus}</td>
                            <td class="p-3">
                                ${pedido.usuario === usuario ? `<button onclick="eliminarPedido('${pedido.id}')" class="bg-red-500 text-white px-2 py-1 rounded hover:bg-red-600">Eliminar</button>` : ""}
                            </td>
                        `;
                tabla.appendChild(fila);
            });
        });

        function eliminarPedido(idPedido) {
            if (connection.state === "Connected") {
                connection.invoke("EliminarPedido", usuario, idPedido).catch(err => console.error(err.toString()));
            } else {
                console.warn("No se puede eliminar el pedido porque la conexión no está lista.");
            }
        }
    </script>

</body>
</html>
