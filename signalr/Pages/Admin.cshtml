@page

<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Administración de Pedidos</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>
</head>
<body class="bg-gray-100 text-gray-900 flex justify-center items-center min-h-screen">

    <div class="max-w-5xl w-full">
        <div class="flex justify-between items-center mb-6">
            <h2 class="text-3xl font-bold">Administración de Pedidos</h2>
            <a href="/" class="bg-indigo-500 text-white px-4 py-2 rounded hover:bg-indigo-600">
                Ir a Pedidos
            </a>
        </div>

        <!-- Tabla de pedidos -->
        <div class="bg-white p-6 rounded-lg shadow-md">
            <table class="w-full border-collapse text-center">
                <thead>
                    <tr class="bg-gray-200">
                        <th class="p-3">Pedido</th>
                        <th class="p-3">Cantidad</th>
                        <th class="p-3">Fecha</th>
                        <th class="p-3">Usuario</th>
                        <th class="p-3">Estatus</th>
                        <th class="p-3">Acciones</th>
                    </tr>
                </thead>
                <tbody id="tablaPedidosAdmin" class="text-gray-700"></tbody>
            </table>
        </div>
    </div>

    <script>
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/pedidoHub")
            .build();

        connection.start().then(() => {
            console.log("Conectado a SignalR");
            connection.invoke("ObtenerPedidos").catch(err => console.error(err.toString()));
        });

        connection.on("ActualizarPedidos", (pedidos) => {
            const tabla = document.getElementById("tablaPedidosAdmin");
            tabla.innerHTML = "";

            pedidos.slice().reverse().forEach(pedido => {
                const fila = document.createElement("tr");
                fila.classList.add("border-b");
                fila.id = pedido.id;
                fila.innerHTML = `
                    <td class="p-3">${pedido.pedidoNombre}</td>
                    <td class="p-3">${pedido.cantidad}</td>
                    <td class="p-3">${pedido.fecha}</td>
                    <td class="p-3">${pedido.usuario}</td>
                    <td class="p-3 text-yellow-500">${pedido.estatus}</td>
                    <td class="p-3">
                        <button onclick="editarPedido('${pedido.id}')" class="bg-yellow-500 text-white px-2 py-1 rounded hover:bg-yellow-600">Editar</button>
                        <button onclick="eliminarPedido('${pedido.id}')" class="bg-red-500 text-white px-2 py-1 rounded hover:bg-red-600">Eliminar</button>
                    </td>
                `;
                tabla.appendChild(fila);
            });
        });

        function eliminarPedido(idPedido) {
            connection.invoke("EliminarPedidoAdmin", idPedido).catch(err => console.error(err.toString()));
        }

        function editarPedido(idPedido) {
            const fila = document.getElementById(idPedido);
            if (!fila) return;

            const pedidoNombre = fila.children[0].textContent;
            const cantidad = fila.children[1].textContent;

            // Reemplazar los valores de la celda con inputs editables
            fila.children[0].innerHTML = `<input type="text" id="editPedido" value="${pedidoNombre}" class="border px-2 py-1 w-full">`;
            fila.children[1].innerHTML = `<input type="number" id="editCantidad" value="${cantidad}" class="border px-2 py-1 w-16">`;

            // Reemplazar los botones por "Actualizar" y "Cancelar"
            fila.children[5].innerHTML = `
                <button onclick="actualizarPedido('${idPedido}')" class="bg-blue-500 text-white px-2 py-1 rounded hover:bg-blue-600">Actualizar</button>
                <button onclick="cancelarEdicion('${idPedido}', '${pedidoNombre}', '${cantidad}')" class="bg-gray-500 text-white px-2 py-1 rounded hover:bg-gray-600">Cancelar</button>
            `;
        }

        function actualizarPedido(idPedido) {
            const nuevoPedido = document.getElementById("editPedido").value.trim();
            const nuevaCantidad = document.getElementById("editCantidad").value.trim();
            const fecha = new Date().toISOString().split('T')[0];

            if (!nuevoPedido || !nuevaCantidad) {
                alert("Todos los campos son obligatorios");
                return;
            }

            const pedidoActualizado = {
                id: idPedido,
                pedidoNombre: nuevoPedido,
                cantidad: nuevaCantidad,
                fecha: fecha,
                estatus: "En Revisión"
            };

            connection.invoke("ActualizarPedidoAdmin", pedidoActualizado).catch(err => console.error(err.toString()));
        }

        function cancelarEdicion(idPedido, pedidoOriginal, cantidadOriginal) {
            const fila = document.getElementById(idPedido);
            if (!fila) return;

            fila.children[0].textContent = pedidoOriginal;
            fila.children[1].textContent = cantidadOriginal;

            fila.children[5].innerHTML = `
                <button onclick="editarPedido('${idPedido}')" class="bg-yellow-500 text-white px-2 py-1 rounded hover:bg-yellow-600">Editar</button>
                <button onclick="eliminarPedido('${idPedido}')" class="bg-red-500 text-white px-2 py-1 rounded hover:bg-red-600">Eliminar</button>
            `;
        }
    </script>

</body>
</html>
